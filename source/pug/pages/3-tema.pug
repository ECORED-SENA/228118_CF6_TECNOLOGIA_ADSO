.container#fundamentos

    .header-ecored
        h1 2. Fundamentos de programación estructurada en LPP

    .jumbotron.bg-white

        .subtitulo-guion
            h2 2.1 Primer programa
        
        p Para iniciar con la construcción del primer programa en la herramienta LPP es necesario seguir los siguientes procesos:

        .list.align-items-center
            .list__item
                .list__item__icon
                    img.img-a1(src="assets/images/pages/v1.svg").img-fluid  
            .list__txt
                p.mb-0 Codificación.
        .list.align-items-center.mt-3
            .list__item
                .list__item__icon
                    img.img-a1(src="assets/images/pages/v1.svg").img-fluid  
            .list__txt
                p.mb-0 Compilación
        .list.align-items-center.mt-3
            .list__item
                .list__item__icon
                    img.img-a1(src="assets/images/pages/v1.svg").img-fluid  
            .list__txt
                p.mb-0 Depuración
        .list.align-items-center.mt-3
            .list__item
                .list__item__icon
                    img.img-a1(src="assets/images/pages/v1.svg").img-fluid  
            .list__txt
                p.mb-0 Ejecución

        p.mt-4 Siga los pasos que se explican para cada proceso en el material:

        .subtitulo-guion.mt-6
            h2 2.2 Tipos de datos
        
        p Un algoritmo opera con los datos que son expresiones que describen los objetos. Los diferentes tipos de datos determinan su forma de almacenamiento en la memoria y las operaciones que podrá desarrollar.

        p Leer sobre los tipos de datos para desarrollar un programa de computador en:

        .subtitulo-guion.mt-6
            h2 2.3 Operadores y expresiones aritméticas
        
        p Los operadores se utilizan en las expresiones e indican las operaciones a efectuar con los operandos.

        p Estudie la diferencia entre operador y expresión aritmética en:

        .subtitulo-guion.mt-6
            h2 2.4 Operadores relacionales y lógicos  
        
        p El resultado de una operación lógica o relacional es un valor lógico verdadero o falso.

        p Analice cómo se emplean los operadores relacionales y lógicos para definir condiciones dentro de un programa:

        .subtitulo-guion.mt-6
            h2 2.5 Estructuras básicas de programación
        
        p Las estructuras básicas permiten desarrollar algoritmos fáciles de escribir, leer, modificar y comprobar.

        p Examine las estructuras secuenciales, condicionales y cíclicas que permiten controlar el flujo lógico en los programas:

        .subtitulo-guion.mt-6
            h2 2.6 Estructuras cíclicas
        
        p Las estructuras cíclicas o de repetición se utilizan para repetir un conjunto de sentencias.

        p Lea sobre las estructuras de programación cíclicas, las características y ejemplos:

        .subtitulo-guion.mt-6
            h2 2.7 Organización de las estructuras en un programa
        
        p Las estructuras secuenciales y cíclicas pueden ser anidadas e introducidas unas en el interior de otras.

        p Revise la explicación en el material:

        .row.p-4.bg-color1.rounded
            .col-12
                p Para comprender los ciclos anidados repase los siguientes ejemplos, Págs. 34-36 Castillo Suazo, R. (2001). Programación en LPP. PSeInt

                section
                    .row.justify-content-center
                        .col-auto
                            a(href="https://docplayer.es/63199938-Programacion-en-pseint-por-lic-rommel-castillo-suazo-original-para-lpp-implementado-en-pseint-por-alejandro-caro.html" target="_blank").media-link
                                img(src="assets/images/icons/icon_www.svg", alt="").media-link-icon
                                .media-link-title
                                    p Programación en: PSeInt

        .subtitulo-guion.mt-6
            h2 2.8 Ejemplo
        
        p Identifique la forma de codificar y ejecutar un programa con diferentes estructuras de programación en el siguiente ejemplo: